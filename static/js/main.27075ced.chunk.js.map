{"version":3,"sources":["HeaderInfo.js","App.js","index.js"],"names":["HeaderInfo","className","App","useState","width","setWidth","height","setHeight","cx","setCx","cy","setCy","rx","setRx","ry","setRy","startOffset","setStartOffset","reversed","setReversed","text","setText","fontSize","setFontSize","textPathFill","setTextPathFill","dy","setDy","fill","setFill","rotate","setRotate","textProps","style","textPathProps","tspanProps","ellipseProps","svgProps","transform","currentJsx","currentJsxString","jsxToString","displayName","useFunctionCode","href","target","rel","htmlFor","type","id","value","onChange","e","checked","min","max","src","alt","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.27075ced.chunk.js","sourcesContent":["const HeaderInfo = () => {\r\n  return (\r\n    <>\r\n      <div className={\"header-div\"}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderInfo;\r\n","import { useState } from \"react\";\nimport jsxToString from \"jsx-to-string\";\nimport \"./App.css\";\nimport HeaderInfo from \"./HeaderInfo\";\nimport ReactCurvedText from \"react-curved-text\";\n\nfunction App() {\n  const [width, setWidth] = useState(370);\n  const [height, setHeight] = useState(300);\n  const [cx, setCx] = useState(190);\n  const [cy, setCy] = useState(140);\n  const [rx, setRx] = useState(100);\n  const [ry, setRy] = useState(100);\n  const [startOffset, setStartOffset] = useState(50);\n  const [reversed, setReversed] = useState(false);\n  const [text, setText] = useState(\"react-curved-text\");\n  const [fontSize, setFontSize] = useState(24);\n  const [textPathFill, setTextPathFill] = useState();\n  const [dy, setDy] = useState(0);\n  const [fill, setFill] = useState();\n  const [rotate, setRotate] = useState(0);\n\n  const textProps = fontSize ? { style: { fontSize: fontSize } } : null;\n  const textPathProps = textPathFill ? { fill: textPathFill } : null;\n  const tspanProps = dy ? { dy: dy } : null;\n  const ellipseProps = fill ? { style: `fill: ${fill}` } : null;\n  const svgProps = rotate\n    ? { style: { transform: `rotate(${rotate}deg)` } }\n    : null;\n\n  const currentJsx = (\n    <ReactCurvedText\n      width={width}\n      height={height}\n      cx={cx}\n      cy={cy}\n      rx={rx}\n      ry={ry}\n      startOffset={startOffset}\n      reversed={reversed}\n      text={text}\n      textProps={textProps}\n      textPathProps={textPathProps}\n      tspanProps={tspanProps}\n      ellipseProps={ellipseProps}\n      svgProps={svgProps}\n    />\n  );\n\n  let currentJsxString = jsxToString(currentJsx, {\n    displayName: \"ReactCurvedText\",\n    useFunctionCode: true\n  });\n  currentJsxString =\n    \"import ReactCurvedText from 'react-curved-text';\\n\\n\" + currentJsxString;\n  return (\n    <div className=\"App\">\n      <HeaderInfo />\n      <div className=\"exampleDemo\">\n        <br />\n        <h2>\n          <a\n            href={\"https://www.npmjs.com/package/react-curved-text\"}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            react-curved-text\n          </a>\n        </h2>\n\n        <div className=\"installationDiv\">\n          <pre>npm install react-curved-text</pre>\n          <pre>yarn add react-curved-text</pre>\n        </div>\n\n        <h3>\n          <a\n            href=\"https://github.com/obss/react-curved-text/blob/master/src/App.js\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            View on GitHub\n          </a>\n        </h3>\n        <div className=\"exampleWrapperDiv\">{currentJsx}</div>\n        <div className=\"settingsDiv\">\n          <div className=\"settingsItem\">\n            <label htmlFor=\"text\">text:</label>\n            <input\n              type=\"text\"\n              id=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"reversed\">reversed:</label>\n            <input\n              type=\"checkbox\"\n              id=\"reversed\"\n              checked={reversed}\n              onChange={(e) => setReversed(e.target.checked)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"startOffset\">startOffset:</label>\n            <input\n              type=\"number\"\n              id=\"startOffset\"\n              value={startOffset}\n              onChange={(e) => setStartOffset(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={startOffset}\n              onChange={(e) => setStartOffset(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"width\">width:</label>\n            <input\n              type=\"number\"\n              id=\"width\"\n              value={width}\n              onChange={(e) => setWidth(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={width}\n              onChange={(e) => setWidth(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"height\">height:</label>\n            <input\n              type=\"number\"\n              id=\"height\"\n              value={height}\n              onChange={(e) => setHeight(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={height}\n              onChange={(e) => setHeight(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"cx\">cx:</label>\n            <input\n              type=\"number\"\n              id=\"cx\"\n              value={cx}\n              onChange={(e) => setCx(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={cx}\n              onChange={(e) => setCx(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"cy\">cy:</label>\n            <input\n              type=\"number\"\n              id=\"cy\"\n              value={cy}\n              onChange={(e) => setCy(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={cy}\n              onChange={(e) => setCy(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"rx\">rx:</label>\n            <input\n              type=\"number\"\n              id=\"rx\"\n              value={rx}\n              onChange={(e) => setRx(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={rx}\n              onChange={(e) => setRx(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"ry\">ry:</label>\n            <input\n              type=\"number\"\n              id=\"ry\"\n              value={ry}\n              onChange={(e) => setRy(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1000\"\n              value={ry}\n              onChange={(e) => setRy(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"fontSize\">textProps.style.fontSize:</label>\n            <input\n              type=\"number\"\n              id=\"fontSize\"\n              value={fontSize}\n              onChange={(e) => setFontSize(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"60\"\n              value={fontSize}\n              onChange={(e) => setFontSize(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"textPathFill\">textPathProps.style.fill:</label>\n            <input\n              type=\"color\"\n              id=\"textPathFill\"\n              checked={textPathFill}\n              onChange={(e) => setTextPathFill(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"dy\">tspanProps.dy:</label>\n            <input\n              type=\"number\"\n              id=\"dy\"\n              value={dy}\n              onChange={(e) => setDy(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"-60\"\n              max=\"60\"\n              value={dy}\n              onChange={(e) => setDy(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"fill\">ellipseProps.style.fill:</label>\n            <input\n              type=\"color\"\n              id=\"fill\"\n              checked={fill}\n              onChange={(e) => setFill(e.target.value)}\n            />\n          </div>\n          <div className=\"settingsItem\">\n            <label htmlFor=\"rotate\">svgProps.style.rotate:</label>\n            <input\n              type=\"number\"\n              id=\"rotate\"\n              value={rotate}\n              onChange={(e) => setRotate(e.target.value)}\n            />\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"360\"\n              value={rotate}\n              onChange={(e) => setRotate(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"currentJsxDiv\">\n          <h3>Current JSX</h3>\n          <span>{currentJsxString}</span>\n        </div>\n\n        <div className=\"codesandboxDiv\">\n          <h3>Live Demo</h3>\n          <a\n            href=\"https://codesandbox.io/s/react-curved-text-demo-99276l\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <img\n              src=\"https://codesandbox.io/static/img/play-codesandbox.svg\"\n              alt=\"Edit react-curved-text-demo\"\n            />\n          </a>\n        </div>\n\n        <div className=\"apiDiv\">\n          <h3>API</h3>\n          <table className=\"apiTable\">\n            <thead>\n              <tr>\n                <th>Prop</th>\n                <th>Type</th>\n                <th>Required</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>text</td>\n                <td>string</td>\n                <td>yes</td>\n                <td>Text to be displayed</td>\n              </tr>\n              <tr>\n                <td>width</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Width of the SVG</td>\n              </tr>\n              <tr>\n                <td>height</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Height of the SVG</td>\n              </tr>\n              <tr>\n                <td>cx</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Center x of the ellipse</td>\n              </tr>\n              <tr>\n                <td>cy</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Center y of the ellipse</td>\n              </tr>\n              <tr>\n                <td>rx</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Radius x of the ellipse</td>\n              </tr>\n              <tr>\n                <td>ry</td>\n                <td>number</td>\n                <td>yes</td>\n                <td>Radius y of the ellipse</td>\n              </tr>\n              <tr>\n                <td>startOffset</td>\n                <td>number</td>\n                <td>no</td>\n                <td>Start offset of the text</td>\n              </tr>\n              <tr>\n                <td>reversed</td>\n                <td>boolean</td>\n                <td>no</td>\n                <td>Reverse the text path</td>\n              </tr>\n              <tr>\n                <td>textProps</td>\n                <td>object</td>\n                <td>no</td>\n                <td>Props to be passed to the text element</td>\n              </tr>\n              <tr>\n                <td>textPathProps</td>\n                <td>object</td>\n                <td>no</td>\n                <td>Props to be passed to the textPath element</td>\n              </tr>\n              <tr>\n                <td>tspanProps</td>\n                <td>object</td>\n                <td>no</td>\n                <td>Props to be passed to the tspan element</td>\n              </tr>\n              <tr>\n                <td>ellipseProps</td>\n                <td>object</td>\n                <td>no</td>\n                <td>Props to be passed to the ellipse element</td>\n              </tr>\n              <tr>\n                <td>svgProps</td>\n                <td>object</td>\n                <td>no</td>\n                <td>Props to be passed to the svg element</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}